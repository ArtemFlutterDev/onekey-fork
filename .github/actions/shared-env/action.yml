name: Shared Environment Variables Setup
description: Setup environment variables for the project

inputs:
  additional_env:
    required: false
    type: string
    description: "Additional environment variables to inject"
  env_file_name:
    required: false
    type: string
    default: ".env"
    description: "Target environment file name"
  sentry_project:
    required: false
    type: string
    default: ''
    description: "Sentry project name"
  covalent_key:
    required: true
    type: string
    description: "Covalent API Key"
  sentry_token:
    required: true
    type: string
    description: "Sentry Auth Token"


runs:
  using: "composite"
  steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Download workflow parameters
      if: ${{ github.event.workflow_run }}
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: daily-build-dev
        name: workflow-params
        run_id: ${{ github.event.workflow_run.id }}
      
    - name: Load workflow parameters
      if: ${{ github.event.workflow_run }}
      run: |
        if [ -f params.env ]; then
          cat params.env >> $GITHUB_ENV
        fi

    - name: Switch to target branch
      if: ${{ github.event.workflow_run }}
      shell: bash
      run: |
        if [ ! -z "${{ env.WORKFLOW_GITHUB_REF_NAME }}" ]; then
          echo "Switching to branch: ${{ env.WORKFLOW_GITHUB_REF_NAME }}"
          git fetch origin ${{ env.WORKFLOW_GITHUB_REF_NAME }}
          git checkout ${{ env.WORKFLOW_GITHUB_REF_NAME }}
        fi

    - name: Dotenv Action
      id: dotenv
      uses: OneKeyHQ/actions/dotenv-action@main
      with:
        path: .env.version

    - name: Setup ENV 
      shell: bash
      run: |
        # Generate app version ------- start
        app_version=${{ steps.dotenv.outputs.version }}
        echo '$app_version='$app_version
        echo "BUILD_APP_VERSION=$app_version" >> $GITHUB_ENV
        # Generate app version ------- end

        # Generate github tag ------- start
        github_ref="${github_ref////-}"
        github_ref="${github_ref/refs-heads-/}"
        github_ref="${github_ref/refs-tags-/}"
        echo '$github_ref='$github_ref
        echo "GITHUB_TAG=$github_ref" >> $GITHUB_ENV
        # echo "::set-env name=GITHUB_TAG::$github_ref"
        # Generate github tag ------- end
      env:
        github_ref: ${{ github.ref }}
        workflow_run_number: ${{ github.event.workflow_run.run_number}}

    - name: Setup ENV BUILD_NUMBER to 1
      if: ${{ !github.event.workflow_run }}
      shell: bash
      run: |
        # Generate build number ------- start
        echo "BUILD_NUMBER=1" >> $GITHUB_ENV
        # Generate build number ------- end
      env:
        github_ref: ${{ github.ref }}
        workflow_run_number: ${{ github.event.workflow_run.run_number}}


    - name: Setup ENV BUILD_NUMBER by workflow_run
      if: ${{ github.event.workflow_run }}
      shell: bash
      run: |
        echo "ActionTriggerBy = ${{ github.event.action }} / ${{ github.event_name }}"
        if [ ! -z "${{ env.WORKFLOW_BUILD_NUMBER }}" ]; then
          echo "BUILD_NUMBER=${{ env.WORKFLOW_BUILD_NUMBER }}" >> $GITHUB_ENV
        else
          # Generate build number ------- start
          DATE=`date "+%Y%m%d"`
          run_number=$(($workflow_run_number % 100))
          run_number=$(printf "%02d" $run_number)
          build_number="${DATE}${run_number}"
          echo '$build_number='$build_number
          echo "BUILD_NUMBER=$build_number" >> $GITHUB_ENV
          # Generate build number ------- end
        fi
      env:
        github_ref: ${{ github.ref }}
        workflow_run_number: ${{ github.event.workflow_run.run_number}}

    - name: Inject Environment Variables
      shell: bash
      env:
        GITHUB_SHA: ${{ github.sha }}
        COVALENT_KEY: ${{ inputs.covalent_key }}
        SENTRY_TOKEN: ${{ inputs.sentry_token }}
        SENTRY_PROJECT: ${{ inputs.sentry_project || '' }}
        TARGET_ENV_FILE: ${{ inputs.env_file_name || '.env' }}

      run: |
        echo "GITHUB_SHA=${{ env.GITHUB_SHA }}" >> ${TARGET_ENV_FILE}
        echo "GITHUB_TAG=${{ env.GITHUB_TAG }}" >> ${TARGET_ENV_FILE}
        echo "CI_BUILD_APP_VERSION=${{ env.BUILD_APP_VERSION }}" >> ${TARGET_ENV_FILE}
        echo "CI_BUILD_NUMBER=${{ env.BUILD_NUMBER }}" >> ${TARGET_ENV_FILE}
        echo "ENABLE_ANALYZER=1" >> ${TARGET_ENV_FILE}
        echo "ENABLE_ANALYZER_HTML_REPORT=1" >> ${TARGET_ENV_FILE}
        echo "COVALENT_KEY=${{ env.COVALENT_KEY }}" >> ${TARGET_ENV_FILE}
        echo "SPLIT_BUNDLE=${{ inputs.is-split-bundle }}" >> ${TARGET_ENV_FILE}
        echo "SENTRY_AUTH_TOKEN=${{ env.SENTRY_TOKEN }}" >> ${TARGET_ENV_FILE}
        echo "SENTRY_TOKEN=${{ env.SENTRY_TOKEN }}" >> ${TARGET_ENV_FILE}
        echo "SENTRY_PROJECT=${{ env.SENTRY_PROJECT }}" >> ${TARGET_ENV_FILE}

        if [[ ! -z "${{ inputs.additional_env }}" ]]; then
          echo "${{ inputs.additional_env }}" >> ${TARGET_ENV_FILE}
        fi 

    - name: Print ENV file content
      shell: bash
      run: |
        # echo "=== .env ==="
        # if [ -f .env ]; then
        #   cat .env
        # fi
        # echo "--------------------------------"

        # echo "=== .env.expo ==="
        # if [ -f .env.expo ]; then
        #   cat .env.expo
        # fi
        # echo "--------------------------------"

        # echo "=== .env.version ==="
        # if [ -f .env.version ]; then
        #   cat .env.version
        # fi
        # echo "--------------------------------"



